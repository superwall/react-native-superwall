# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
ENV['SHELL'] = '/bin/bash'
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'SuperwallReactNativeExample' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'SuperwallReactNativeExampleTests' do
    inherit! :complete
    # Pods for testing
  end

    post_install do |installer|
    # React Native post install
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )

    installer.pods_project.targets.each do |target|
      # --- Hermes build script fix ---
      if target.name == 'hermes-engine'
        target.shell_script_build_phases.each do |phase|
          if phase.name.include?('Replace Hermes')
            phase.shell_script = <<~SCRIPT
              if [ -f "${PODS_ROOT}/hermes-engine/destroot/bin/hermesc" ]; then
                echo "[Hermes] Already configured. Skipping replacement."
              else
                echo "[Hermes] Running replacement logic."
                # Place original logic here if needed
              fi
            SCRIPT
          end
        end
      end
    end
  end
end